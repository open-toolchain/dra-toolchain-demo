version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](dra-toolchain.svg?localize)'
  icon: icon.svg
  required:
    - demodra-build
    - demodra-repo
    - dra
  info:
    git url: >
      "[" + $env.repository + "]" +
        "(" + $env.repository + ")"
    git branch: >
      "[" + $env.branch + "]" +
        "(" + $env.repository +
          "/tree/" + $env.branch + ")"
    hosted_region: ""
toolchain:
  name: 'devops-insights-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  demodra-repo:
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: '{{form.githubpublic.parameters.demodra-repo_name}}'
      repo_url: >
        $env.type === 'link' ?
          $env.app_repo : '{{form.githubpublic.parameters.demodra-repo_url}}'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ?
          $env.app_repo : '{{form.githubpublic.parameters.demodra-repo_url}}'
      type: $env.type || 'clone'
      has_issues: true
      enable_traceability: true
  demodra-build:
    service_id: pipeline
    parameters:
      services:
        - demodra-repo
      name: '{{toolchain.name}}'
      configuration:
        content:
          $text: demodra.pipeline.yml
        env:
          DEMODRA_API_REPO: demodra-repo
          LOGICAL_APP_NAME: Weather Application
          CF_APP_NAME: '{{form.pipeline.parameters.demodra-app-name}}'
          STAGING_SPACE_NAME: '{{form.pipeline.parameters.staging-space}}'
          STAGING_ORG_NAME: '{{form.pipeline.parameters.staging-organization}}'
          STAGING_REGION_ID: '{{form.pipeline.parameters.staging-region}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          APP_REPO_BRANCH: >
            $env.template.info.hosted_region !== "" ? 'main': 'master'
        execute: true
  dra:
    service_id: draservicebroker
    $ref: dra.yml
form:
  pipeline:
    parameters:
      staging-space: staging
      prod-space: prod
      demodra-app-name: '{{services.demodra-repo.parameters.repo_name}}'
    schema:
      $ref: deploy.json
  githubpublic:
    parameters:
      demodra-repo_name: '{{toolchain.name}}'
      demodra-repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/DemoDOI"
        } else {
          "https://github.com/open-toolchain/DemoDOI"
        }
    schema:
      $ref: github.json
