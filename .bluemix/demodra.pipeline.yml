---
stages:
- name: BUILD
  inputs:
  - type: git
    branch: master
    service: ${DEMODRA_API_REPO}
  triggers:
  - type: commit
  jobs:
  - name: Build
    type: builder
    artifact_dir: ''
    build_type: shell
    script: |-
      #!/bin/bash
      export PATH=/opt/IBM/node-v4.2/bin:$PATH
      npm install
      grunt dev-setup --no-color
  - name: Unit Test and Code Coverage
    type: tester
    enable_tests: true
    test_file_pattern: ./mochatest.xml
    coverage_type: istanbul
    coverage_directory: ./tests/coverage/reports/lcov-report
    coverage_file_pattern: ./tests/coverage/reports/coverage.json
    script: |-
      #!/bin/bash
      export PATH=/opt/IBM/node-v4.2/bin:$PATH
      npm install

      set +e
      grunt dev-test-cov --no-color
      grunt_result=$?
      set -e

      if [ $grunt_result -ne 0 ]; then
         exit $grunt_result
      fi
- name: STAGING
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  properties:
  - name: CF_APP_NAME
    value: undefined
    type: text
  - name: APP_URL
    value: undefined
    type: text
  jobs:
  - name: Deploy
    type: deployer
    target:
      region_id: ${STAGING_REGION_ID}
      organization: ${STAGING_ORG_NAME}
      space: ${STAGING_SPACE_NAME}
      application: ${CF_APP_NAME}
      api_key: ${API_KEY}
    script: |
      #!/bin/bash
      # Push app
      export CF_APP_NAME="staging-$CF_APP"
      cf push "${CF_APP_NAME}" -n ${CF_APP_NAME}
      export APP_URL=http://$(cf app $CF_APP_NAME | grep -e urls: -e routes: | awk '{print $2}')
      # View logs
      #cf logs "${CF_APP_NAME}" --recent
  - name: FVT Test
    type: tester
    enable_tests: true
    test_file_pattern: ./mochafvt.xml
    script: |-
      #!/bin/bash
      export PATH=/opt/IBM/node-v4.2/bin:$PATH
      npm install

      set +e
      grunt fvt-test --no-color
      grunt_result=$?
      set -e

      if [ $grunt_result -ne 0 ]; then
         exit $grunt_result
      fi
- name: PRODUCTION
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  properties:
  - name: CF_APP_NAME
    value: undefined
    type: text
  - name: APP_URL
    value: undefined
    type: text
  jobs:
  - name: Deploy
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME}
      api_key: ${API_KEY}
    script: |
      #!/bin/bash
      # Push app
      export CF_APP_NAME="$CF_APP"
      cf push "${CF_APP_NAME}" -n ${CF_APP_NAME}
      export APP_URL=http://$(cf app $CF_APP_NAME | grep -e urls: -e routes: | awk '{print $2}')
      # View logs
      #cf logs "${CF_APP_NAME}" --recent
